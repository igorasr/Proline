services:
  proline_api:
      build:
        context: .
        dockerfile: ./docker/Dockerfile
      container_name: proline_api
      restart: unless-stopped
      volumes:
        - .:/var/www/html
      networks:
        - internal
      depends_on:
        - proline_cache
        - proline_db

  proline_cache:
    image: redis:alpine
    container_name: proline_cache
    ports:
      - "6380:6379"
    restart: unless-stopped
    networks:
        - internal

  proline_proxy:
    image: nginx:alpine
    container_name: proline_proxy
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - proline_api
    networks:
      - internal

  proline_db:
      image: mysql:8.0
      container_name: proline_db
      restart: always
      environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
      ports:
        - "3306:3306"
      volumes:
        - db_data:/var/lib/mysql
      networks:
        - internal

networks:
  internal:
    driver: bridge

volumes:
  db_data: