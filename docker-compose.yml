services:
  laravel.test:
      build:
        context: .
        dockerfile: ./docker/Dockerfile
      container_name: proline_api
      restart: unless-stopped
      volumes:
        - .:/var/www/html
      networks:
        - internal
      depends_on:
        redis:
          condition: service_started
        mysql:
          condition: service_healthy

  redis:
    image: redis:alpine
    container_name: proline_cache
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      internal:
        aliases:
          - redis

  proline_proxy:
    image: nginx:alpine
    container_name: proline_proxy
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - laravel.test
    networks:
      - internal

  mysql:
      image: mysql/mysql-server:8.0
      container_name: proline_db
      restart: always
      environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
      ports:
        - "3306"
      networks:
        internal:
          aliases:
            - mysql
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
        interval: 30s
        retries: 5
        start_period: 30s

networks:
  internal:
    driver: bridge
